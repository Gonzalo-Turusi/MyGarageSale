@using MyGarageSale.Services
@using MyGarageSale.Models
@inject ICategoryService CategoryService
@inject IItemService ItemService
@inject IJSRuntime JSRuntime

<div class="p-4 sm:p-8">
    <!-- Header Section -->
    <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-6">
        <div>
            <h2 class="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
                Administrar Categorías
            </h2>
            <p class="text-gray-600 mt-2 text-sm sm:text-base">Organiza tus productos por categorías</p>
        </div>
        <button @onclick="ShowCreateModal" 
                class="mt-4 sm:mt-0 inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg shadow-sm hover:shadow-md transition-all duration-200 text-sm sm:text-base">
            <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            Nueva Categoría
        </button>
    </div>

    @if (isLoading)
    {
        <div class="flex justify-center py-16">
            <div class="text-center">
                <div class="animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto"></div>
                <p class="mt-4 text-gray-600 font-medium">Cargando categorías...</p>
            </div>
        </div>
    }
    else
    {
        @if (categories.Any())
        {
            <!-- Vista Móvil - Tarjetas -->
            <div class="block lg:hidden space-y-4">
                @foreach (var category in categories)
                {
                    <div class="bg-white rounded-xl shadow-lg border border-gray-200/50 overflow-hidden">
                        <div class="p-4">
                            <!-- Título de Categoría -->
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center space-x-3">
                                    <div class="bg-purple-100 p-2 rounded-lg">
                                        <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="font-semibold text-gray-900 text-base">@category.Name</h3>
                                        <div class="flex items-center mt-1">
                                            <div class="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-semibold flex items-center">
                                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                                                </svg>
                                                @GetItemsCountForCategory(category.Id) artículos
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Descripción -->
                            @if (!string.IsNullOrEmpty(category.Description))
                            {
                                <p class="text-sm text-gray-700 mb-3 line-clamp-3">@category.Description</p>
                            }
                            else
                            {
                                <p class="text-sm text-gray-400 italic mb-3">Sin descripción</p>
                            }
                            
                            <!-- Acciones -->
                            <div class="flex justify-end space-x-2 pt-2 border-t border-gray-100">
                                <button @onclick="() => ShowEditModal(category)" 
                                        class="flex items-center px-3 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200 text-sm font-medium">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                    </svg>
                                    Editar
                                </button>
                                
                                <button @onclick="() => DeleteCategory(category.Id)" 
                                        class="flex items-center px-3 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200 text-sm font-medium">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                    </svg>
                                    Eliminar
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Vista Desktop - Tabla -->
            <div class="hidden lg:block bg-white rounded-2xl shadow-xl border border-gray-200/50 overflow-hidden">
                <!-- Table Header -->
                <div class="bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200">
                    <div class="grid grid-cols-12 gap-4 items-center font-semibold text-gray-700 text-sm">
                        <div class="col-span-4">Categoría</div>
                        <div class="col-span-5">Descripción</div>
                        <div class="col-span-2">Artículos</div>
                        <div class="col-span-1 text-center">Acciones</div>
                    </div>
                </div>

                <!-- Table Body -->
                <div class="divide-y divide-gray-100">
                    @foreach (var category in categories)
                    {
                        <div class="px-6 py-4 hover:bg-gray-50 transition-colors duration-200">
                            <div class="grid grid-cols-12 gap-4 items-center">
                                <!-- Categoría -->
                                <div class="col-span-4">
                                    <div class="flex items-center space-x-3">
                                        <div class="bg-purple-100 p-2 rounded-lg">
                                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                                            </svg>
                                        </div>
                                        <div>
                                            <p class="font-semibold text-gray-900 text-sm">@category.Name</p>
                                        </div>
                                    </div>
                                </div>

                                <!-- Descripción -->
                                <div class="col-span-5">
                                    @if (!string.IsNullOrEmpty(category.Description))
                                    {
                                        <p class="text-sm text-gray-700 line-clamp-2">@category.Description</p>
                                    }
                                    else
                                    {
                                        <p class="text-sm text-gray-400 italic">Sin descripción</p>
                                    }
                                </div>

                                <!-- Artículos -->
                                <div class="col-span-2">
                                    <div class="flex items-center">
                                        <div class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-semibold flex items-center">
                                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                                            </svg>
                                            @GetItemsCountForCategory(category.Id)
                                        </div>
                                    </div>
                                </div>

                                <!-- Acciones -->
                                <div class="col-span-1">
                                    <div class="flex items-center justify-center space-x-2">
                                        <button @onclick="() => ShowEditModal(category)" 
                                                class="p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200 tooltip" 
                                                title="Editar categoría">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                            </svg>
                                        </button>
                                        
                                        <button @onclick="() => DeleteCategory(category.Id)" 
                                                class="p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200 tooltip" 
                                                title="Eliminar categoría">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-16">
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200/50 p-8 sm:p-12 max-w-md mx-auto">
                    <svg class="mx-auto h-12 w-12 sm:h-16 sm:w-16 text-gray-400 mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                    </svg>
                    <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">No hay categorías</h3>
                    <p class="text-gray-600 mb-6 text-sm sm:text-base">Crea categorías para organizar mejor tus productos.</p>
                    <button @onclick="ShowCreateModal" 
                            class="inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg shadow-sm hover:shadow-md transition-all duration-200 text-sm sm:text-base">
                        <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                        Crear Primera Categoría
                    </button>
                </div>
            </div>
        }
    }
</div>

<!-- Modal para Crear/Editar Categoría - Posicionado fuera del contenedor principal -->
@if (showModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4" 
         style="z-index: 9999;" @onclick="CloseModalOnBackdrop">
        <div class="bg-white rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-hidden" 
             @onclick:stopPropagation="true">
            <!-- Modal Header -->
            <div class="bg-blue-600 px-6 py-4 text-white">
                <div class="flex justify-between items-center">
                    <div>
                        <h3 class="text-xl font-bold">
                            @(editingCategory?.Id > 0 ? "Editar Categoría" : "Nueva Categoría")
                        </h3>
                        <p class="text-blue-100 text-sm mt-1">
                            @(editingCategory?.Id > 0 ? "Modifica los detalles de la categoría" : "Crea una nueva categoría para organizar tus productos")
                        </p>
                    </div>
                    <button @onclick="CloseModal" class="text-blue-100 hover:text-white p-2 hover:bg-blue-700 rounded-lg transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Body -->
            <div class="p-6">
                <EditForm Model="@editingCategory" OnValidSubmit="@SaveCategory" FormName="AdminCategoryForm">
                    <DataAnnotationsValidator />
                    
                    <div class="space-y-6">
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">Nombre de la Categoría</label>
                            <InputText @bind-Value="editingCategory!.Name" 
                                       class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                                       placeholder="Ej: Electrónicos, Ropa, Hogar..." />
                            <ValidationMessage For="@(() => editingCategory.Name)" class="text-red-500 text-sm mt-1 font-medium" />
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">Descripción (Opcional)</label>
                            <InputTextArea @bind-Value="editingCategory.Description" 
                                           rows="3"
                                           class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none"
                                           placeholder="Breve descripción de la categoría..." />
                        </div>
                    </div>

                    <!-- Modal Footer -->
                    <div class="flex justify-end space-x-4 mt-8 pt-6 border-t border-gray-200">
                        <button type="button" @onclick="CloseModal" 
                                class="px-6 py-3 border border-gray-300 rounded-xl text-sm font-semibold text-gray-700 hover:bg-gray-50 transition-colors duration-200">
                            Cancelar
                        </button>
                        <button type="submit" 
                                disabled="@isSaving"
                                class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed shadow-sm hover:shadow-md transition-all duration-200">
                            @if (isSaving)
                            {
                                <span class="flex items-center">
                                    <svg class="animate-spin -ml-1 mr-3 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Guardando...
                                </span>
                            }
                            else
                            {
                                <span>Guardar Categoría</span>
                            }
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    private List<Category> categories = new();
    private Dictionary<int, int> itemsCount = new();
    private Category editingCategory = new();
    private bool showModal = false;
    private bool isLoading = true;
    private bool isSaving = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        isLoading = true;
        try
        {
            categories = await CategoryService.GetAllCategoriesAsync();
            await LoadItemsCount();
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadItemsCount()
    {
        itemsCount.Clear();
        foreach (var category in categories)
        {
            var count = await CategoryService.GetItemsCountByCategoryAsync(category.Id);
            itemsCount[category.Id] = count;
        }
    }

    private int GetItemsCountForCategory(int categoryId)
    {
        return itemsCount.TryGetValue(categoryId, out var count) ? count : 0;
    }

    private void ShowCreateModal()
    {
        editingCategory = new Category();
        showModal = true;
    }

    private void ShowEditModal(Category category)
    {
        editingCategory = new Category
        {
            Id = category.Id,
            Name = category.Name,
            Description = category.Description
        };
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
        editingCategory = new Category();
    }

    private void CloseModalOnBackdrop(MouseEventArgs e)
    {
        CloseModal();
    }

    private async Task SaveCategory()
    {
        try
        {
            isSaving = true;
            
            if (editingCategory.Id > 0)
            {
                await CategoryService.UpdateCategoryAsync(editingCategory);
            }
            else
            {
                await CategoryService.CreateCategoryAsync(editingCategory);
            }
            
            await LoadData();
            CloseModal();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al guardar categoría: {ex.Message}");
        }
        finally
        {
            isSaving = false;
        }
    }

    private async Task DeleteCategory(int categoryId)
    {
        var category = categories.FirstOrDefault(c => c.Id == categoryId);
        if (category == null) return;

        var itemsInCategory = GetItemsCountForCategory(categoryId);
        
        string confirmMessage = itemsInCategory > 0 
            ? $"Esta categoría tiene {itemsInCategory} artículo(s). ¿Estás seguro de que deseas eliminarla? Los artículos quedarán sin categoría."
            : "¿Estás seguro de que deseas eliminar esta categoría?";

        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", confirmMessage);
        
        if (confirmed)
        {
            try
            {
                await CategoryService.DeleteCategoryAsync(categoryId);
                await LoadData();
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Error al eliminar categoría: {ex.Message}");
            }
        }
    }
} 